{
  "accession": "GAPL8RDL92TY",
  "app_name": "workflow_vep-annot-check",
  "app_version": "v19",
  "arguments": [
      {
          "argument_format": "vcf_gz",
          "argument_type": "Input file",
          "workflow_argument_name": "input_vcf"
      },
      {
          "argument_format": "fa",
          "argument_type": "Input file",
          "workflow_argument_name": "reference"
      },
      {
          "argument_format": "txt",
          "argument_type": "Input file",
          "workflow_argument_name": "regions"
      },
      {
          "argument_format": "vep_tar",
          "argument_type": "Input file",
          "workflow_argument_name": "vep"
      },
      {
          "argument_format": "vcf_gz",
          "argument_type": "Input file",
          "workflow_argument_name": "clinvar"
      },
      {
          "argument_format": "dbnsfp_gz",
          "argument_type": "Input file",
          "workflow_argument_name": "dbnsfp"
      },
      {
          "argument_format": "tar_gz",
          "argument_type": "Input file",
          "workflow_argument_name": "maxent"
      },
      {
          "argument_format": "vcf_gz",
          "argument_type": "Input file",
          "workflow_argument_name": "spliceai_snv"
      },
      {
          "argument_format": "vcf_gz",
          "argument_type": "Input file",
          "workflow_argument_name": "spliceai_indel"
      },
      {
          "argument_format": "vcf_gz",
          "argument_type": "Input file",
          "workflow_argument_name": "gnomad"
      },
      {
          "argument_format": "vcf_gz",
          "argument_type": "Output processed file",
          "workflow_argument_name": "annotated_vcf",
          "secondary_file_formats": ["vcf_gz_tbi"]
      },
      {
          "argument_type": "Output QC file",
          "workflow_argument_name": "annotated_vcf-check",
          "argument_to_be_attached_to": "annotated_vcf",
          "qc_zipped": false,
          "qc_html": false,
          "qc_json": false,
          "qc_table": true,
          "qc_type": "quality_metric_vcfcheck"
      },
      {
          "argument_type": "parameter",
          "workflow_argument_name": "nthreads"
      }
  ],
  "project": "12a92962-8265-4fc0-b2f8-cf14f05db58b",
  "category": ["processing"],
  "cwl_child_filenames": ["vep-annot.cwl", "bcftools-norm-multiallelics.cwl", "vcf-integrity-check.cwl"],
  "cwl_directory_url_v1": "https://raw.githubusercontent.com/dbmi-bgm/cgap-pipeline/v19/cwl",
  "cwl_main_filename": "workflow_vep-annot_plus_vcf-integrity-check.cwl",
  "cwl_pointer": "",
  "description": "Split multiallelic variants. Run VEP to annotate input vcf file. An integrity check is performed on the output file",
  "docker_image_name": "cgap/cgap:v19",
  "docker_registry_url": "https://hub.docker.com/",
  "institution": "828cd4fe-ebb0-4b36-a94a-d2e3a36cc989",
  "name": "workflow_vep-annot-check_v19",
  "aliases": ["cgap:workflow_vep-annot-check_v19"],
  "steps": [
      {
          "inputs": [
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "vcf_gz",
                      "global": true,
                      "type": "data file"
                  },
                  "name": "input_vcf",
                  "source": [
                      {
                          "name": "input_vcf"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "fa",
                      "global": true,
                      "type": "reference file"
                  },
                  "name": "reference",
                  "source": [
                      {
                          "name": "reference"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "txt",
                      "global": true,
                      "type": "reference file"
                  },
                  "name": "regions",
                  "source": [
                      {
                          "name": "regions"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "vep_tar",
                      "global": true,
                      "type": "reference file"
                  },
                  "name": "vep",
                  "source": [
                      {
                          "name": "vep"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "vcf_gz",
                      "global": true,
                      "type": "reference file"
                  },
                  "name": "clinvar",
                  "source": [
                      {
                          "name": "clinvar"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "dbnsfp_gz",
                      "global": true,
                      "type": "reference file"
                  },
                  "name": "dbnsfp",
                  "source": [
                      {
                          "name": "dbnsfp"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "tar_gz",
                      "global": true,
                      "type": "reference file"
                  },
                  "name": "maxent",
                  "source": [
                      {
                          "name": "maxent"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "vcf_gz",
                      "global": true,
                      "type": "reference file"
                  },
                  "name": "spliceai_snv",
                  "source": [
                      {
                          "name": "spliceai_snv"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "vcf_gz",
                      "global": true,
                      "type": "reference file"
                  },
                  "name": "spliceai_indel",
                  "source": [
                      {
                          "name": "spliceai_indel"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "vcf_gz",
                      "global": true,
                      "type": "reference file"
                  },
                  "name": "gnomad",
                  "source": [
                      {
                          "name": "gnomad"
                      }
                  ]
              },
              {
                  "meta": {
                      "cardinality": "single",
                      "global": true,
                      "type": "parameter"
                  },
                  "name": "nthreads",
                  "source": [
                      {
                          "name": "nthreads"
                      }
                  ]
              }
          ],
          "meta": {
              "analysis_step_types": [
                  "Run bcftools and VEP to annotate vcf input file"
              ],
              "software_used": [
                 "/softwares/791a7248-9ba3-44da-bff9-0d9b121eaf5c",
                 "/softwares/85041e50-a7fc-4633-a83b-983b8ebbc48e"
              ]
          },
          "name": "vep-annot",
          "outputs": [
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "vcf_gz",
                      "global": true,
                      "type": "data file"
                  },
                  "name": "annotated_vcf",
                  "target": [
                      {
                          "name": "annotated_vcf",
                          "step": "vcf-integrity-check"
                      }
                  ]
              }
          ]
      },
      {
          "inputs": [
              {
                  "meta": {
                      "cardinality": "single",
                      "file_format": "vcf_gz",
                      "global": false,
                      "type": "data file"
                  },
                  "name": "annotated_vcf",
                  "source": [
                      {
                          "name": "annotated_vcf",
                          "step": "vep-annot"
                      }
                  ]
              }
          ],
          "meta": {
              "analysis_step_types": [
                  "Check integrity of vcf output file"
              ],
              "software_used": [
                 "/softwares/f7ac2c5f-9203-49fa-b918-cede02bf46f7"
              ]
          },
          "name": "vcf-integrity-check",
          "outputs": [
              {
                  "meta": {
                      "cardinality": "single",
                      "global": true,
                      "type": "QC"
                  },
                  "name": "annotated_vcf-check",
                  "target": [
                      {
                          "name": "annotated_vcf-check"
                      }
                  ]
              }
          ]
      }
  ],
  "title": "Split multiallelic variants and run VEP to annotate input vcf file",
  "uuid": "860a1240-f15a-425d-875b-7b8f943130d4",
  "previous_version": ["a5464e85-dd94-486d-8ecd-d5e06dadc766"],
  "version_update_log": "Indel reaglienment added for multiallelic splitting, extended ClinVar fields used by VEP, removed older gnomAD used by VEP by default"
}
